plugins {
    id 'java'

    // javaFx
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    // https://mvnrepository.com/artifact/org.json/json
    implementation group: 'org.json', name: 'json', version: '20240303'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.16.2'
    // lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    // https://mvnrepository.com/artifact/org.apache.lucene/lucene-analyzers-kuromoji
    implementation group: 'org.apache.lucene', name: 'lucene-analyzers-kuromoji', version: '8.11.3'
    // google Cloud translate api
    implementation 'com.google.cloud:google-cloud-translate:2.47.0'
    // https://mvnrepository.com/artifact/org.openjfx/javafx-controls
    implementation group: 'org.openjfx', name: 'javafx-controls', version: '23-ea+22'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: '23-ea+22'
    // google cloud api key
    implementation 'com.google.auth:google-auth-library-oauth2-http:1.24.0'
    // https://mvnrepository.com/artifact/com.atilika.kuromoji/kuromoji-ipadic
    implementation 'com.atilika.kuromoji:kuromoji-ipadic:0.9.0'


}

javafx {
    version = "23-ea+22"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

test {
    useJUnitPlatform()
}

// add for deploying to jar
jar {
    manifest {
        attributes(
                'Main-Class': application.mainClass // Define of main class of Jar file
        )
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

// shadowJar load to single unnamed module.
// So this project doesn't need src/module-info.java.
// Therefore, it will be printed "WARNING: Unsupported JavaFX configuration: classes were loaded from 'unnamed module ######'" after execution.
// shadowJar only create jar file not zip file.
shadowJar {
    archiveClassifier.set('') // Remove postfix '-all'
    // manifest Add infos into 'MANIFEST.MF' file
    manifest {
        // Designate main class When execute jar file.
        attributes 'Main-Class': application.mainClass
    }
}

application {
    mainClass = 'lyricsystem.Main'
}

// this code's logic is When execute command of 'gradlew run'
tasks.named('run') {
    doFirst {
        jvmArgs = [
                "--module-path", "${System.getenv("JAVA_FX_HOME")}/lib",
                "--add-modules", "javafx.controls,javafx.fxml",
        ]
    }
}